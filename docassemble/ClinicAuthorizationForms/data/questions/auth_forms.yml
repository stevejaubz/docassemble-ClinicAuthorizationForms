---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.MassAccess:massaccess.yml
---
objects:
  - doc_type: DAList
  - studentattorney: ALPeopleList.using(target_number=1,ask_number=True)
  - client: ALPeopleList.using(target_number=1,ask_number=True)
  - parent: ALPeopleList.using(target_number=1,ask_number=True)
  - hospital: ALIndividual
  - fax: Individual
  - supervisor: ALPeopleList.using(target_number=1,ask_number=True)
  - court: DAObject
  - defender: DAObject
  - accelerator: DAObject
  - users: ALPeopleList
  - docket_numbers: DAList.using(there_are_any=True)
  - courts: DAList.using(auto_gather=False, target_number=1, gathered=True)
---
metadata:
  title: |
    Suffolk Juvenile Defenders
  short title: |
    HIPAA Intake App
  tags:
    - HE-00-00-00-00
---
code: |
  al_form_type = 'existing_case'
---
mandatory: True
comment: |
  This contains metadata that will not be overwritten if this YAML file is included in another
  file. Each file gets its own key in the interview_metadata dictionary.
  Most keys are not currently used at runtime, other than "allowed courts".
code: |
  interview_metadata
  if not defined("interview_metadata['JDC_HIPAA_Improved']"):
    interview_metadata.initializeObject("JDC_HIPAA_Improved")
    interview_metadata["JDC_HIPAA_Improved"].update({
      "al_weaver_version": "0.81",
      "generated on": "2021-04-19",
      "title": "Suffolk Juvenile Defenders",
      "short title": "HIPAA Intake App",
      "description": "This is the intro",
      "original_form": "",
      "allowed courts": [
      ],
      "categories": [
        "HE-00-00-00-00",
      ],
      "logic block variable": "interview_order_JDC_HIPAA_Improved",
      "attachment block variable": "JDC_HIPAA_Improved_attachment",
      "typical role": "unknown",
    })
---
code: |
  interview_short_title = "Sign/Submit your client\'s HIPAA release  form"
---
code: |
  al_form_type = 'other_form'
---
sections:
  - review_JDC_HIPAA_Improved: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_JDC_HIPAA_Improved
code: |
  # Set the allowed courts for this interview
  al_intro_screen = False
  users.there_is_another= False
  allowed_courts = interview_metadata["JDC_HIPAA_Improved"]["allowed courts"]
  nav.set_section('review_JDC_HIPAA_Improved')
  user_role = 'defendant'
  user = False
  users[0].address.state = False
  users[0].address.adress = False
  users[0].address.city = False
  users[0].address.zip = False
  goodbye_page = False
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  JDC_HIPAA_Improved_intro
  doc_select
  studentattorney.gather()
  #supervisor.gather()
  client.gather()
  if doc_select == 'jdc_student':
    parent.gather()
  if doc_select == 'defenders_student': 
    trial_court
    records_choice
  if doc_select == 'a2p_student':
    message("The interview is over.", "Better luck next time!")
  #client[0].address.address

  #supervisor.name.first
  #client.name.first
  #client_address

  #docket_numbers[0]
  #if doc_select == 'jdc_student':
    #school_discipline_case
  #showed_disclosure
  
  advise_client
  preview_intake
  # Save anonymized interview statistics (customize the saved data below)
  store_variables_snapshot(data={'zip': users[0].address.zip})
  #JDC_HIPAA_Improved_preview_question
  basic_questions_signature_flow
  #client[0].signature
  #if doc_select == 'jdc_student':
  #  parent[0].signature
  #studentattorney.signature
  #supervisor.signature
  preview_signed
  ok_to_finish
  #user_has_privilege('clinic')
  hospital.name.first
  fax_phone
  signature_date
  got_result
  email_sent_ok
  #all_done
  #display_fax_results
  
  #JDC_HIPAA_Improved_download
---
code: |
  if not user_logged_in():
    require_login_screen
  if not user_has_privilege('clinic'):
    kick_out
  ok_to_finish = True
---
event: require_login_screen
question: |
  You need to log in to finish this interview.
buttons:
  - Log in: leave
    url: ${ url_of('login', next=interview_url()) }
---
id: kickout
event: kick_out
question: | 
  Sorry, you do not have the proper permissions to use this app
subquestion: | 
  This interview is for clinical students at Suffolk University Law School. If you believe you should have access to this application contact your clinic director or email suffolklitlab@gmail.com
---
id: form choice 
question: | 
  What forms do you want to fill out 
fields: 
  - HIPPA: fill_HIPPA
    datatype: yesnowide
  - 'SJC Rule 3:03 Form': sjc_303
  - Authorization for Representation: clinic_auth 
---
id: clinic choice
question: |
  Select your clinic
field: doc_select
choices:
  - Juvenile Defenders: jdc_student
  - Defenders: defenders_student
  - Accelerator to Practice: a2p_student
---
id: signature fields 
code: |
  if doc_select == 'jdc_student':
    signature_fields = ["client[0].signature", "parent[0].signature"]
  else:
    signature_fields = ["client[0].signature"]
---
id: Main intro screen
decoration: fax
continue button field: JDC_HIPAA_Improved_intro
question: |
  Sign and Submit Your Clientâ€™s HIPAA Release Form: Court Forms Online
subquestion: |

  The Court Forms Online Project can help you complete and fax your client's HIPAA form in 3 steps:

  Step 1. Answer questions that will fill in the form for you.
  
  Step 2. Preview the completed form.
  
  Step 3. Fax the forms to the hospital using this secure website and save copies
  for yourself for later reference.

  Tap the {green words} in any screen for a definition or more information.
  
  **Attention:** Student Attorneys are responsible for protecting client information at all times. Suffolk University Law School is not liable for any misuse of this application and releases all liability to any claims that may arise from using this tool.

  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif
fields:
  - To continue, you must accept our [terms of use](https://courtformsonline.org/privacy/): acknowledged_information_use
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
right: |
  % if user_has_saved_answers:
  ${fa_icon("bell", color="primary", size="sm")}
  Saved answers available!

  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), size="sm" )}
  % endif
---
#id: Student Attorney
#question: |
#  Student attorney information
#fields:
#  - First Name: studentattorney.name.first
#  - Last Name: studentattorney.name.last
---
id: student attorney name 
sets:
  - studentattorney[0].name.first
  - studentattorney[0].name.last
  - studentattorney[0].email
generic object: ALPeopleList
question: |
  Student attorney information
subquestion: | 
  Make sure to use your clinic email address. 
fields:
  - code: |
      studentattorney[0].name_fields()
  - Email address: studentattorney[0].email
    datatype: email
---
id: supervisor name 
sets:
  - supervisor[0].name.first
  - supervisor[0].name.last
  - supervisor[0].email
generic object: ALPeopleList
question: |
  Information of your supervising attorney 
fields:
  - code: |
      supervisor[0].name_fields()
  - Email address: supervisor[0].email
    datatype: email
---
id: client information 
sets:
  - client[0].name.first
  - client[0].name.last
generic object: ALPeopleList
question: |
  Client information
fields:
  - code: |
      client[0].name_fields()
  - Birthdate: client.dob
    datatype: birthdate
---
id: legal gaurdian 
sets:
  - parent[0].name.first
  - parent[0].name.last
generic object: ALPeopleList
question: |
  Client's legal guardian name
fields:
  - code: |
      parent[0].name_fields()
---
id: end of representation
question: |
  Advise ${client[0].name} of the following
subquestion: |
  * This form is valid through the end of the Clinic's representation of them.
  
  * The purpose of releasing protected health information is for use by attorney in assisting them in their pending case(s).
 
  * Information used or disclosed under this authorization may be subject to re-disclosure by their attorney for purposes related to their legal representation.
 
  * Disclosures by their attorney will not be protected by HIPAA privacy rules. 
  
mandatory: True
field: advise_client
---
id: hospital information
question: |
  Hospital or Medical Institution Information
fields:
  - Name of Hospital/Medical Institution: hospital.name.first
  - Hospital fax number: hospital.fax
  - code: | 
      hospital.address_fields()
---
#id: supervisor info
#question: |
#  Supervisor information
#subquestion: |
#  Provide the following:
#fields:
#  - First Name: supervisor.name.first
#  - Last Name: supervisor.name.last
#  - Email: supervisor.email
#    datatype: email
#continue button field: supervisor_info
---
comment: |
  ############# START OF DEFENDERS CLINIC SPECIFIC INFORMATION ###########
---
id: court defenders 
question: | 
  What court is this case in? 
fields: 
  - Court: trial_court
    datatype: combobox
    code: |
      sorted((set([str(y) for y in all_courts.filter_courts(["District Court","Boston Municipal Court", "Superior Court"])])))  
---
id: what records
question: | 
  Do you want to request all record information or only certain records?
fields: 
  - Records: records_choice 
    input type: radio 
    choices: 
      - All records 
      - Only some records
  - Records: what_records
    show if: 
      variable: records_choice
      is: 'Only some records'
---
comment: |
 ########### END OF DEFENDERS CLINIC SPECIFIC INFORMATION END ##############
---
id: supervisor signature
question: |
  ${ supervisor[0].name }, please sign below
subquestion: |
  **${ studentattorney[0].name }** is sending you intake forms to sign in the matter of **${ client[0].name }**
signature: supervisor.signature
under: |
  ${ supervisor[0].name }
---
#id: student signature
#question: |
#  ${ studentattorney[0].name.first }, sign your forms
#signature: studentattorney.signature
#under: |
#  ${ studentattorney[0].name }
---
#id: client signature
#question: |
#  ${ client[0].name.first }, sign below
#signature: client[0].signature
#under: |
#  ${ client[0].name }
---
#id: parent signature
#question: |
#  ${ parent[0].name.first }, sign below
#signature: parent[0].signature
#under: |
#  ${ parent[0].name }
---
#id: JDC HIPAA Improved review screen
#event: review_JDC_HIPAA_Improved
#question: |
#  Review your answers
#review:
#  - Edit: client.name
#    button: |
#      **Client name full**:
#      ${ client.name }
#  - Edit: client.dob
#    button: |
#      **Client dob**:
#      ${ client.dob }
#  - Edit: todays.date
#    button: |
#      **Date of todays**:
#      ${ todays.date }
#  - Edit: client.signature
#    button: |
#      **Client Signature**:
#      ${ client.signature }
---
#id: download JDC_HIPAA_Improved
#event: JDC_HIPAA_Improved_download
#continue button field: go_to_fax
#question: |
  #Your form is ready to download and fax.
#subquestion: |

  #Thank you ${ studentattorney.name.first }. Your form is ready to download and fax to the hospital.

  #View, download and send your form below. Click the "Make changes" button to fix any mistakes.

  #${ action_button_html(url_action('review_" + interview_label + "'), label='Make changes', color='info') }

  #${ al_user_bundle.download_list_html() }

  #${ al_user_bundle.send_button_html() }

#progress: 90
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[JDC_HIPAA_Improved_attachment, Authorization_For_Representation_attachment], filename="JDC_HIPAA_Improved.pdf", title="All forms to download for your records")
  - al_court_bundle: ALDocumentBundle.using(elements=[JDC_HIPAA_Improved_attachment, Authorization_For_Representation_attachment], filename="JDC_HIPAA_Improved.pdf", title="All forms to download for your records")
  - fax_package: ALDocumentBundle.using(elements=[Fax_cover_sheet_attachment, JDC_HIPAA_Improved_attachment], filename="fax_package.pdf", title="HIPAA fax")
  - Defender_Package: ALDocumentBundle.using(elements=[Defenders_HIPAA], filename="fax_package.pdf", title="HIPAA fax")
---
objects: 
  - JDC_HIPAA_Improved_attachment: ALDocument.using(title="This is the intro", filename="JDC_HIPAA_Improved.pdf", enabled=True, has_addendum=False)
  - Fax_cover_sheet_attachment: ALDocument.using(title="This is the intro", filename="fax_cover_sheet.pdf", enabled=True, has_addendum=False)
  - Defenders_HIPAA: ALDocument.using(title="Defenders HIPAA", filename="Defenders_HIPAA.pdf", enabled=True, has_addendum=False) 
---
id:  fax cover sheet 
question: |
  Fax Cover Sheet
subquestion: |
  The information below will be included on the cover sheet of your fax to the hospital
fields:
  - From phone number: fax_phone
  - Fax subject: fax_subject
    maxlength: 33
  - Fax comment: fax_comment
    default: |
      We are requesting a full and complete copy of the ${ client[0].name }'s medical records. Enclosed please find a HIPAA release for these records for the above named person. I am specifically requesting any and all records on file with ${ hospital.name } related to ${ client[0].name }. 
      
      Thank you in advance and please do not hesitate to contact me with any questions. 
    datatype: area
    maxlength: 902
---
id: end screen

mandatory: True 
question: |
  Your fax has been sent
subquestion: | 
  ##### Successful fax should display "Result: queued" below
  ***
  % if result:
  
  **Result:** ${ result.get('data',{}).get('status') }
  
  % endif
  
  ***
  You will recieve an email with a copy of the fax sent to ${ hospital.name }.
  
  Call the hospital to confirm receipt. 
  
  Be sure to store a copy for your records. You can also download a copy below by clicking on a form to view.  

  ${file_to_fax}
buttons:
  - Exit: exit
  - Restart: restart
---
id: Appearance Disclosure
question: |
  ${ client[0].name.first }, read the below disclosure 
subquestion: |
  S.J.C. RULE 3:03 DISCLOSURE
  
  * I understand that my counsel is a law student enrolled in the Juvenile Defenders Clinic, and further understand that another attorney will be appointed to me instead if I so desire.

  * I authorize ${ studentattorney } and any successor student attorneys of the Suffolk University Law School Clinical Programs to represent me in the above-entitled case.*
continue button field: showed_disclosure
fields:
  - To continue, acknowledge client recieved disclosure: acknowledged_disclosure
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:
      - "**Client recieved disclosure**"
    validation messages:
      minlength: |
        You cannot continue unless your client has acknowledged this disclousre
---
id: client address
generic object: ALIndividual
sets:
  - client[0].address.address
  - client[0].address.city
  - client[0].address.zip
question: |
  What is ${ client[0] }'s address?
fields:
  - code: |
      client[0].address_fields()   
---
question: |
  Do you have a docket number for this case?
yesno: docket_numbers.there_are_any
---
id: docket numbers
question: |
  What is the docket number for this case?
subquestion: |
  If there are multiple docket numbers on this form, you can tap "${word("Add another")}"
  to add more than one.
list collect: True
fields:
  - no label: docket_numbers[i]
    required: False
---
continue button field: school_discipline_case
id: school discipline
question: |
  Will you be representing your client in a school discipline case?
fields:
  - no label: has_school_case
    datatype: yesnoradio
    required: false
  - Case number: school_case
    show if: has_school_case
---
objects:
  - web: DAWeb.using(base_url='https://api.telnyx.com/v2', json_body=False, on_failure='raise')
---
code: |
  data = {'media_url': pdf_url,
    'connection_id': get_config('telnyx fax',{}).get('connection id'),
    'to': hospital_fax_formatted, 
    'from': get_config('telnyx fax',{}).get('my fax') }
  headers = {'Authorization': get_config('telnyx fax',{}).get('api key'),
             'Content-Type': 'application/x-www-form-urlencoded'
             }
  try:
    result = web.post('faxes',
                      data=data,
                      headers=headers,
                      json_body=False,
                      )
  except DAWebError as e:
    result = e.response_json
  got_result = True
---
code: | 
  pdf_url = file_to_fax.url_for(temporary=True, seconds=90, attachment=True)
---
reload: 10
id: fax endscreen
question: |
  This is the end screen.
subquestion: |

  **Below is the response you receieved from the FAX API. "Fax Status:  Queued" indicates the request was successful and the app is working properly**

  ${ result.get('data').get('status') }

# add button to download the fax that was sent, alternatively - send student attorney an email copy of the fax package- needs to have a screen that tell user what was done with their fax-generate a follow up email with all forms generated

field: all_done
---
code: |
  hospital_fax_formatted = phone_number_in_e164(hospital.fax)
---
code: |
  country: US
---
id: send fax
question: |
  **WARNING:** You are about to send a fax.
subquestion: |
  Your fax will be sent to ${hospital.name} at ${hospital.fax}

  Click on the attached file and review the accuracy of all information before proceeding.

  Click **Send fax** to fax ${client[0].name}'s HIPAA Release to ${hospital.name}

  ${file_to_fax}
field: got_result
continue button label: Send fax
---

---
id: preview before signing
question: |
  Preview your forms
subquestion: |
  Click on a form to view. 

  % if doc_select == 'jdc_student':
  ${ JDC_HIPAA_Improved_attachment.as_pdf(key='preview')} 
  % endif 
  
  % if doc_select == 'defenders_student':
  ${ Defenders_HIPAA.as_pdf(key='preview')} 
  % endif 

continue button field: preview_intake 
---
id: intake forms signed
question: |
  View your signed forms
subquestion: |
  % if doc_select == 'jdc_student':
  ${ JDC_HIPAA_Improved_attachment.as_pdf(key='preview')} 
  % endif 
  
  % if doc_select == 'defenders_student':
  ${ Defender_Package.as_pdf(key='preview')} 
  ${ Defender_Package.download_list_html() }
  ${ Defender_Package.send_button_html() }
  
  % endif 
  

  
continue button field: preview_signed
continue button label: Continue to Send Fax
---
id: use forms
question: |
  Download or email your intake forms
attachment code: |
  [JDC_HIPAA_Improved_attachment, Authorization_For_Representation_attachment, Notice_of_Appearance_and_Disclosure_attachment]

field: saw_intake_forms
under:
  continue button label: Done
---
#initial: True
#code: |
#  if what_next == 'Manage forms':
#    intake_finished
#  if what_next == 'Fax HIPAA release to hospital':
#    send_fax
#  if what_next == 'Exit':
#    exit_screen
---
id: exit screen
question: |
  All done
subquestion: |
  You have completed ${client.name.first}'s intake. What would you like to do
buttons:
  - Logout: logout
  - Fax HIPAA form: use_fax
event: exit_screen
---
code: | 
  email_sent_ok = send_email(to=studentattorney[0].email, template=fax_copy, attachments=[file_to_fax])
---
template: fax_copy
subject: |
  Fax sent - ${ client[0] } 
content: |
  Attached is a copy of the fax sent on ${ today(format='MM/dd/YYYY') } to ${ hospital.name } at ${ hospital_fax_formatted }
  
  Call the hospital to confirm receipt. 
  
  Store a copy for your records. 
---
id: file to fax 
code: |
  if doc_select == 'jdc_student':
    file_to_fax = pdf_concatenate(Fax_cover_sheet_attachment.as_pdf(), JDC_HIPAA_Improved_attachment.as_pdf())
  elif doc_select == 'defenders_student':
    file_to_fax = pdf_concatenate(Fax_cover_sheet_attachment.as_pdf(), Defenders_HIPAA.as_pdf())
---
id: Fax cover sheet attachment
attachment:
  name: Fax_cover_sheet_attachment
  variable name: Fax_cover_sheet_attachment[i]
  filename: Fax_cover_sheet
  skip undefined: True
  pdf template file: Fax_cover_sheet.pdf
  editable: False
  fields:
      - "hospital.name": ${ hospital.name }
      - "student_attorney": ${ studentattorney[0].name }
      - "hospital.fax": ${ hospital.fax }
      - "fax_from": ${ +16177520995 }
      - "fax_phone": ${ fax_phone }
      - "hospital.phone": ${ hospital.phone }
      - "todays.date": ${ today(format='MM/dd/YYYY') }
      - "fax_subject": ${ fax_subject }
      - "fax_comment": ${ fax_comment } 
# on cover sheet make from_fax the clinic's fax number
---
attachment:
  name: Juvenile Defenders Clinic HIPAA 
  filename: JDC_HIPAA_Improved
  variable name: JDC_HIPAA_Improved_attachment[i]
  skip undefined: True
  pdf template file: JDC_HIPAA_Improved.pdf
  editable: False
  fields:
      - "client_name__1": ${ client[0].name }
      - "client_name__2": ${ client[0].name }
      - "parent_name": ${ parent[0].name }
      - "student_attorney": ${ studentattorney[0].name }
      - "client_dob": ${ client.dob.format() }
      - "todays_date__1": ${ today(format='MM/dd/YYYY') }
      - "todays_date__2": ${ today(format='MM/dd/YYYY') }  
      - "todays_date__3": ${ today(format='MM/dd/YYYY') }  
      - "client_signature": ${ client[0].signature_if_final(i) }
      - "parent_signature": ${ parent[0].signature_if_final(i) }
---
id: Defenders HIPAA
attachment:
  name: Defenders HIPAA
  variable name: Defenders_HIPAA[i]
  filename: Defenders_HIPAA
  skip undefined: True
  pdf template file: Defenders_Clinic_HIPAA.pdf
  editable: False
  fields:
      - "client_name__1": ${ client[0].name }
      - "student_attorney": ${ studentattorney[0].name }
      - "hospital.name": ${ hospital.name }
      - "trial_court": ${ trial_court } 
      - "all_information": |
          % if records_choice == 'All records':
          ${ records_choice }
          % endif
      - "some_records": | 
          % if records_choice == 'Only some records':
          ${ records_choice }
          % endif 
      - "records_relating": ${ what_records}
      - "client_signature": ${ client[0].signature_if_final(i) }
      - "todays_date__1": ${ today(format='MM/dd/YYYY') }
      - "client_dob": ${ client.dob.format('MM/dd/YYY') }
      - "admission_dates": ${ admission_release_dates }
      - "hospital.fax": ${ hospital.fax }
---
attachment:
  variable name: Notice_of_Appearance_and_Disclosure_attachment
  name: Notice_of_Appearance_and_Disclosure_attachment
  filename: Notice_of_Appearance_and_Disclosure
  skip undefined: True
  pdf template file: Notice_of_Appearance_and_Disclosure.pdf
  fields:
      - "client_name__1": ${ client[0].name }
      - "client_name__2": ${ client[0].name }
      - "student_attorney": ${ studentattorney[0].name }
      - "todays.date": ${ today(format='MM/dd/YYYY') }
      - "client.signature": ${ client[0].signature }
      - "parent.signature": ${ parent[0].signature }
      - "studentattorney.signature": ${ studentattorney[0].signature }
      - "supervisor.signature": ${ supervisor[0].signature }
      - "docket_numbers": ${ docket_numbers }
---
attachment:
  variable name: Authorization_For_Representation_attachment
  name: Authorization_For_Representation_attachment
  filename: Authorization_For_Representation
  skip undefined: True
  pdf template file: Authorization_For_Representation.pdf
  fields:
      - "client_name": ${ client[0].name }
      - "student_attorney": ${ studentattorney[0].name }
      - "client_address_line_one": ${ client[0].address.line_one() }
      - "client_address_city_state_zip": ${ client[0].address.line_two()}
      - "docket_numbers": ${ docket_numbers }
      - "school_case": ${ school_case }
      - "todays.date": ${ today(format='MM/dd/YYYY') }
      - "client.signature": ${ client[0].signature }
      - "parent.signature": ${ parent[0].signature }
      - "studentattorney.signature": ${ studentattorney[0].signature }
      - "supervisor.signature": ${ supervisor[0].signature }
